{
  "openapi": "3.0.0",
  "info": {
    "title": "Contacts API",
    "version": "1.0.0",
    "description": "API for managing user contacts",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3333",
      "description": "Local server"
    },
    {
      "url": "https://contacts-app-i7zf.onrender.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations with contacts"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get all contacts",
        "operationId": "getContacts",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/serverError"
          }
        }
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Create a new contact",
        "operationId": "createContact",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/created"
          },
          "400": {
            "$ref": "#/components/responses/validationError"
          },
          "500": {
            "$ref": "#/components/responses/serverError"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get a contact by ID",
        "operationId": "getContactById",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the contact to retrieve"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/serverError"
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete a contact",
        "operationId": "deleteContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the contact to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Contact deleted successfully"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/serverError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Contact": {
        "type": "object",
        "required": ["name", "phoneNumber", "contactType"],
        "properties": {
          "id": {
            "type": "string",
            "example": "60c72b2f5f1b2c001f6b9b2b"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+1234567890"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "isFavourite": {
            "type": "boolean",
            "example": true
          },
          "contactType": {
            "type": "string",
            "enum": ["personal", "work"],
            "example": "personal"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-13T10:20:30Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-13T10:20:30Z"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "success": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully found contact!"
                },
                "data": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      },
      "created": {
        "description": "Contact created successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Successfully created a contact!"
                },
                "data": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      },
      "notFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Contact not found"
                }
              }
            }
          }
        }
      },
      "serverError": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                }
              }
            }
          }
        }
      },
      "validationError": {
        "description": "Bad Request - Validation failed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Validation failed"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "example": "name"
                      },
                      "message": {
                        "type": "string",
                        "example": "Name is required"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "badRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid parameters"
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
